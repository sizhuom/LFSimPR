function makeCamUserDefined( camFile, camParam, randOffset )
%MAKECAMUSERDEFINED Make the user-defined camera as .inc file

%INCORRECT! y is not inverted, which generates wrong image when not
%centered

fout = fopen(camFile, 'w');

if (isfield(camParam, 'H'))
    H = camParam.H;
else
    H = genIntrinsics2(camParam.resol, camParam.apert, camParam.fov, camParam.fLen);
end
if isfield(camParam, 'R')
    R = camParam.R;
    t = camParam.t;
else
    if isfield(camParam, 'up')
        [R, t] = buildLookAt(camParam.pos, camParam.lookAt, camParam.up, true);
    else
        [R, t] = buildLookAt(camParam.pos, camParam.lookAt, [0;1;0], true);
    end
end

Hx = R(:,1:2) * H(1:2,:);
Hy = R(:,1:2) * H(3:4,:);

fprintf(fout, '#version 3.71;\n');
fprintf(fout, '#include "math.inc"\n');
fprintf(fout, '#declare sx = %d;\n', camParam.resol(2));
fprintf(fout, '#declare sy = %d;\n', camParam.resol(1));
fprintf(fout, '#declare su = %d;\n', camParam.resol(4));
fprintf(fout, '#declare sv = %d;\n', camParam.resol(3));
if nargin < 3
    fprintf(fout, [
        'camera {\n'...
        'user_defined\n'...
        'location {\n']);
    fprintf(fout, ['function { int(mod((x+0.5)*image_width,sx)+1)*(%.16g)'...
        '+int(mod((y+0.5)*image_height,sy)+1)*(%.16g)'...
        '+(div((x+0.5)*image_width,sx)+1)*(%.16g)'...
        '+(div((y+0.5)*image_height,sy)+1)*(%.16g)'...
        '+(%.16g) }\n'],Hx(1,1),Hx(1,2),Hx(1,3),Hx(1,4),Hx(1,5)+t(1));
    fprintf(fout, ['function { int(mod((x+0.5)*image_width,sx)+1)*(%.16g)'...
        '+int(mod((y+0.5)*image_height,sy)+1)*(%.16g)'...
        '+(div((x+0.5)*image_width,sx)+1)*(%.16g)'...
        '+(div((y+0.5)*image_height,sy)+1)*(%.16g)'...
        '+(%.16g) }\n'],Hx(2,1),Hx(2,2),Hx(2,3),Hx(2,4),Hx(2,5)+t(2));
    fprintf(fout, ['function { int(mod((x+0.5)*image_width,sx)+1)*(%.16g)'...
        '+int(mod((y+0.5)*image_height,sy)+1)*(%.16g)'...
        '+(div((x+0.5)*image_width,sx)+1)*(%.16g)'...
        '+(div((y+0.5)*image_height,sy)+1)*(%.16g)'...
        '+(%.16g) }\n'],Hx(3,1),Hx(3,2),Hx(3,3),Hx(3,4),Hx(3,5)+t(3));
    fprintf(fout, '}\n');
    fprintf(fout, 'direction {\n');
    fprintf(fout, ['function { int(mod((x+0.5)*image_width,sx)+1)*(%.16g)'...
        '+int(mod((y+0.5)*image_height,sy)+1)*(%.16g)'...
        '+(div((x+0.5)*image_width,sx)+1)*(%.16g)'...
        '+(div((y+0.5)*image_height,sy)+1)*(%.16g)'...
        '+(%.16g) }\n'],Hy(1,1),Hy(1,2),Hy(1,3),Hy(1,4),Hy(1,5)+R(1,3));
    fprintf(fout, ['function { int(mod((x+0.5)*image_width,sx)+1)*(%.16g)'...
        '+int(mod((y+0.5)*image_height,sy)+1)*(%.16g)'...
        '+(div((x+0.5)*image_width,sx)+1)*(%.16g)'...
        '+(div((y+0.5)*image_height,sy)+1)*(%.16g)'...
        '+(%.16g) }\n'],Hy(2,1),Hy(2,2),Hy(2,3),Hy(2,4),Hy(2,5)+R(2,3));
    fprintf(fout, ['function { int(mod((x+0.5)*image_width,sx)+1)*(%.16g)'...
        '+int(mod((y+0.5)*image_height,sy)+1)*(%.16g)'...
        '+(div((x+0.5)*image_width,sx)+1)*(%.16g)'...
        '+(div((y+0.5)*image_height,sy)+1)*(%.16g)'...
        '+(%.16g) }\n'],Hy(3,1),Hy(3,2),Hy(3,3),Hy(3,4),Hy(3,5)+R(3,3));
else    
    randx = randOffset(1);
    randy = randOffset(2);
    randu = randOffset(3);
    randv = randOffset(4);
    fprintf(fout, [
        'camera {\n'...
        'user_defined\n'...
        'location {\n']);
    fprintf(fout, ['function { int(mod((x+0.5)*image_width,sx)+(%.16g))*(%.16g)'...
        '+int(mod((y+0.5)*image_height,sy)+(%.16g))*(%.16g)'...
        '+(div((x+0.5)*image_width,sx)+(%.16g))*(%.16g)'...
        '+(div((y+0.5)*image_height,sy)+(%.16g))*(%.16g)'...
        '+(%.16g) }\n'],randx,Hx(1,1),randy,Hx(1,2),randu,Hx(1,3),randv,Hx(1,4),Hx(1,5)+t(1));
    fprintf(fout, ['function { int(mod((x+0.5)*image_width,sx)+(%.16g))*(%.16g)'...
        '+int(mod((y+0.5)*image_height,sy)+(%.16g))*(%.16g)'...
        '+(div((x+0.5)*image_width,sx)+(%.16g))*(%.16g)'...
        '+(div((y+0.5)*image_height,sy)+(%.16g))*(%.16g)'...
        '+(%.16g) }\n'],randx,Hx(2,1),randy,Hx(2,2),randu,Hx(2,3),randv,Hx(2,4),Hx(2,5)+t(2));
    fprintf(fout, ['function { int(mod((x+0.5)*image_width,sx)+(%.16g))*(%.16g)'...
        '+int(mod((y+0.5)*image_height,sy)+(%.16g))*(%.16g)'...
        '+(div((x+0.5)*image_width,sx)+(%.16g))*(%.16g)'...
        '+(div((y+0.5)*image_height,sy)+(%.16g))*(%.16g)'...
        '+(%.16g) }\n'],randx,Hx(3,1),randy,Hx(3,2),randu,Hx(3,3),randv,Hx(3,4),Hx(3,5)+t(3));
    fprintf(fout, '}\n');
    fprintf(fout, 'direction {\n');
    fprintf(fout, ['function { int(mod((x+0.5)*image_width,sx)+(%.16g))*(%.16g)'...
        '+int(mod((y+0.5)*image_height,sy)+(%.16g))*(%.16g)'...
        '+(div((x+0.5)*image_width,sx)+(%.16g))*(%.16g)'...
        '+(div((y+0.5)*image_height,sy)+(%.16g))*(%.16g)'...
        '+(%.16g) }\n'],randx,Hy(1,1),randy,Hy(1,2),randu,Hy(1,3),randv,Hy(1,4),Hy(1,5)+R(1,3));
    fprintf(fout, ['function { int(mod((x+0.5)*image_width,sx)+(%.16g))*(%.16g)'...
        '+int(mod((y+0.5)*image_height,sy)+(%.16g))*(%.16g)'...
        '+(div((x+0.5)*image_width,sx)+(%.16g))*(%.16g)'...
        '+(div((y+0.5)*image_height,sy)+(%.16g))*(%.16g)'...
        '+(%.16g) }\n'],randx,Hy(2,1),randy,Hy(2,2),randu,Hy(2,3),randv,Hy(2,4),Hy(2,5)+R(2,3));
    fprintf(fout, ['function { int(mod((x+0.5)*image_width,sx)+(%.16g))*(%.16g)'...
        '+int(mod((y+0.5)*image_height,sy)+(%.16g))*(%.16g)'...
        '+(div((x+0.5)*image_width,sx)+(%.16g))*(%.16g)'...
        '+(div((y+0.5)*image_height,sy)+(%.16g))*(%.16g)'...
        '+(%.16g) }\n'],randx,Hy(3,1),randy,Hy(3,2),randu,Hy(3,3),randv,Hy(3,4),Hy(3,5)+R(3,3));
end
fprintf(fout, '}\n');
fprintf(fout, '}\n');

fclose(fout);

end

